Environment Variables:
    
-> env
-> each variable has a name and a  value
-> variables communicate working of programs to control their behaviour
-> path variable -> where to look for the programs

-> getenv 

-> int main() | int main(int argc,char **argv,char **envp)

------------------------------------------------------------------------

#include<stdio.h>
#include<stdlib.h>

int main(){
    char *value;

    value = getenv("HOME");
    printf("HOME = %s\n",value);
    value = getenv("USER");
    printf("USER=%s\n",value);
}

------------------------------------------------------------------------

#include<stdio.h>
#include<stdlib.h>

int main(int argc, char **argv, char **envp){
    for(int i=0;envp[i]!=NULL;i++){
        printf("%d: %s\n",i,envp[i]);
    }
}


------------------------------------------------------------------------

#include<stdio.h>
#include<stdlib.h>

extern char **environ;

int main(int argc, char **argv, char **envp){
    for(int i=0;envp[i]!=NULL;i++){
        printf("%d: %s\n",i,envp[i]);
    }
}

-------------------------------------------------------------------------

-> envt variable is specific to an environment
-> values to be accessed on a program that can't be shared with others. This is set up in your environmnet variable

-> env prints out environment variable
-> HOME = 

-> printenv to print out a variable name
-> echo = echoes to the console
-> $ is a shell syntax for refering to an environment variable

-> The shell variables of a shell is only accessible from that shell process. The environment variables exported from that shell is accessible from both 
that shell process and the sub-processes created from that shell.











